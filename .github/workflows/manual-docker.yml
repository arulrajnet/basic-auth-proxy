name: Manual Docker Build and Push

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Docker tag to use'
        required: true
        default: 'manual'
        type: string
      platforms:
        description: 'Platforms to build for'
        required: false
        default: 'linux/amd64,linux/arm64'
        type: choice
        options:
          - 'linux/amd64'
          - 'linux/amd64,linux/arm64'
          - 'linux/amd64,linux/arm64,linux/arm/v7'
          - 'linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6,linux/arm/v5,linux/386,linux/ppc64le,linux/s390x,linux/riscv64'
      push_to_registry:
        description: 'Push to Docker Hub'
        required: false
        default: false
        type: boolean

env:
  REGISTRY: docker.io
  IMAGE_NAME: arulrajnet/basic-auth-proxy

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: ${{ inputs.push_to_registry }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ inputs.tag }}

      - name: Get version and build info
        id: build_info
        run: |
          VERSION=$(git describe --tags --always --dirty 2>/dev/null || echo "${{ inputs.tag }}")
          GIT_COMMIT=$(git rev-parse HEAD)
          BUILD_IMAGE_ID="${{ github.run_id }}-${{ github.run_number }}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "git_commit=$GIT_COMMIT" >> $GITHUB_OUTPUT
          echo "build_image_id=$BUILD_IMAGE_ID" >> $GITHUB_OUTPUT

      - name: Build and optionally push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ inputs.platforms }}
          push: ${{ inputs.push_to_registry }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ steps.build_info.outputs.version }}
            GIT_COMMIT=${{ steps.build_info.outputs.git_commit }}
            BUILD_IMAGE_ID=${{ steps.build_info.outputs.build_image_id }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create manual build summary
        run: |
          echo "## 🐳 Manual Docker Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Tag:** \`${{ inputs.tag }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Platforms:** \`${{ inputs.platforms }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Pushed to Registry:** ${{ inputs.push_to_registry && '✅ Yes' || '❌ No (build only)' }}" >> $GITHUB_STEP_SUMMARY
          if [ "${{ inputs.push_to_registry }}" = "true" ]; then
            echo "**Image:** \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ inputs.tag }}\`" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Build Info:**" >> $GITHUB_STEP_SUMMARY
          echo "- Version: \`${{ steps.build_info.outputs.version }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- Commit: \`${{ steps.build_info.outputs.git_commit }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- Build ID: \`${{ steps.build_info.outputs.build_image_id }}\`" >> $GITHUB_STEP_SUMMARY
