name: PR Docker Build and Push

on:
  pull_request:
    branches: [ main, master ]
    types: [ opened, synchronize, reopened ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: arulrajnet/basic-auth-proxy

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=pr-${{ github.event.number }}

      - name: Get version and build info
        id: build_info
        run: |
          VERSION=$(git describe --tags --always --dirty 2>/dev/null || echo "dev")
          GIT_COMMIT=$(git rev-parse HEAD)
          BUILD_IMAGE_ID="${{ github.run_id }}-${{ github.run_number }}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "git_commit=$GIT_COMMIT" >> $GITHUB_OUTPUT
          echo "build_image_id=$BUILD_IMAGE_ID" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6,linux/arm/v5,linux/386,linux/ppc64le,linux/s390x,linux/riscv64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ steps.build_info.outputs.version }}
            GIT_COMMIT=${{ steps.build_info.outputs.git_commit }}
            BUILD_IMAGE_ID=${{ steps.build_info.outputs.build_image_id }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Comment PR with image info
        uses: actions/github-script@v7
        with:
          script: |
            const tag = 'pr-${{ github.event.number }}';
            const imageName = '${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}';
            const fullImage = `${imageName}:${tag}`;

            const comment = `üê≥ **Docker Image Built Successfully!**

            **Image:** \`${fullImage}\`
            **Tag:** \`${tag}\`
            **Platforms:** linux/amd64, linux/arm64, linux/arm/v7, linux/arm/v6, linux/arm/v5, linux/386, linux/ppc64le, linux/s390x, linux/riscv64

            **Pull command:**
            \`\`\`bash
            docker pull ${fullImage}
            \`\`\`

            **Run command:**
            \`\`\`bash
            docker run --rm -p 8080:8080 ${fullImage}
            \`\`\``;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
